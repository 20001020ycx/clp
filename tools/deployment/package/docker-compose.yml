x-service-defaults: &service_defaults
  networks: ["clp-network"]
  stop_grace_period: "3s"
  user: "${CLP_USER_ID:-1000}:${CLP_GROUP_ID:-1000}"

x-healthcheck-defaults: &healthcheck_defaults
  start_period: "10s"
  start_interval: "1s"
  interval: "30s"
  timeout: "10s"
  retries: 3

networks:
  clp-network:
    driver: "bridge"

secrets:
  CLP_DB_PASS_FILE:
    environment: "CLP_DB_PASS"

services:
  db:
    <<: *service_defaults
    image: "${CLP_DB_IMAGE:-mysql:8.0.23}"
    container_name: "database"
    secrets:
      - "CLP_DB_PASS_FILE"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: "/run/secrets/CLP_DB_PASS_FILE"
      MYSQL_USER: "${CLP_DB_USER}"
      MYSQL_PASSWORD_FILE: "/run/secrets/CLP_DB_PASS_FILE"
      MYSQL_DATABASE: "${CLP_DB_NAME}"
    volumes:
      - "./etc/mysql/conf.d/logging.cnf:/etc/mysql/conf.d/logging.cnf:ro"
      - "${CLP_HOST_DATA_DIR:-./var/data}/database:/var/lib/mysql"
      - "${CLP_HOST_LOGS_DIR:-./var/log}/database:/var/log/mysql"
    ports:
      - "${CLP_DB_HOST:-127.0.0.1}:${CLP_DB_PORT:-3306}:3306"
    healthcheck:
      <<: *healthcheck_defaults
      test: [
        "CMD",
        "mysqladmin", "ping",
        "--silent",
        "-h", "127.0.0.1",
        "-u", "${CLP_DB_USER}",
        "--password=${CLP_DB_PASS}"
      ]

  db-table-creator:
    <<: *service_defaults
    image: "${CLP_PACKAGE_CONTAINER}"
    container_name: "db_table_creator"
    environment:
      PYTHONPATH: "/opt/clp/lib/python3/site-packages"
      CLP_DB_USER: "${CLP_DB_USER}"
      CLP_DB_PASS: "${CLP_DB_PASS}"
    command: [
      "python3",
      "-u",
      "-m", "clp_py_utils.create-db-tables",
      "--config", "/etc/clp-config.yml",
      "--storage-engine", "${CLP_STORAGE_ENGINE}"
    ]
    volumes:
      - "${CLP_HOST_LOGS_DIR:-./var/log}/.clp-config.yml:/etc/clp-config.yml"
    depends_on:
      db:
        condition: "service_healthy"

  queue:
    <<: *service_defaults
    image: "rabbitmq:3.9.8"
    container_name: "queue"
    environment:
      RABBITMQ_LOGS: "/var/log/rabbitmq/rabbitmq.log"
      RABBITMQ_DEFAULT_USER: "${CLP_QUEUE_USER}"
      RABBITMQ_DEFAULT_PASS: "${CLP_QUEUE_PASS}"
    volumes:
      - "${CLP_HOST_LOGS_DIR:-./var/log}/queue:/var/log/rabbitmq"
    ports:
      - "${CLP_QUEUE_HOST:-127.0.0.1}:${CLP_QUEUE_PORT:-5672}:5672"
    healthcheck:
      <<: *healthcheck_defaults
      test: [
        "CMD",
        "rabbitmq-diagnostics", "check_running"
      ]

  redis:
    <<: *service_defaults
    image: "redis:7.2.4"
    container_name: "redis"
    command: [
      "redis-server",
      "/usr/local/etc/redis/redis.conf",
      "--requirepass", "${CLP_REDIS_PASS}"
    ]
    volumes:
      - "./etc/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro"
      - "${CLP_HOST_LOGS_DIR:-./var/log}/redis:/var/log/redis"
      - "${CLP_HOST_DATA_DIR:-./var/data}/redis:/data"
    ports:
      - "${CLP_REDIS_HOST:-127.0.0.1}:${CLP_REDIS_PORT:-6379}:6379"
    healthcheck:
      <<: *healthcheck_defaults
      test: [
        "CMD",
        "redis-cli",
        "-h", "127.0.0.1",
        "-p", "6379",
        "-a", "${CLP_REDIS_PASS}",
        "PING"
      ]

  results-cache:
    <<: *service_defaults
    image: "mongo:7.0.1"
    container_name: "results_cache"
    command: [
      "--config", "/etc/mongo/mongod.conf",
      "--bind_ip", "0.0.0.0",
    ]
    volumes:
      - "./etc/mongo:/etc/mongo:ro"
      - "${CLP_HOST_DATA_DIR:-./var/data}/results_cache:/data/db"
      - "${CLP_HOST_LOGS_DIR:-./var/log}/results_cache:/var/log/mongodb"
    ports:
      - "${CLP_RESULTS_CACHE_HOST:-127.0.0.1}:${CLP_RESULTS_CACHE_PORT:-6379}:27017"
    healthcheck:
      <<: *healthcheck_defaults
      test: >-
        echo 'db.runCommand("ping").ok' |
        mongosh 127.0.0.1:${CLP_RESULTS_CACHE_PORT:-27017}/test --quiet

  results-cache-indices-creator:
    <<: *service_defaults
    image: "${CLP_PACKAGE_CONTAINER}"
    container_name: "results_cache_indices_creator"
    environment:
      PYTHONPATH: "/opt/clp/lib/python3/site-packages"
    command: [
      "python3",
      "-u",
      "-m", "clp_py_utils.initialize-results-cache",
      "--uri", "mongodb://results_cache:27017/${RESULTS_CACHE_CLP_DB_NAME:-clp-query-results}",
      "--stream-collection", "${CLP_RESULTS_CACHE_STREAM_COLLECTION_NAME:-stream-files}",
    ]
    depends_on:
      results-cache:
        condition: "service_healthy"

  compression-scheduler:
    <<: *service_defaults
    image: "${CLP_PACKAGE_CONTAINER}"
    container_name: "compression_scheduler"
    environment:
      PYTHONPATH: "/opt/clp/lib/python3/site-packages"
      BROKER_URL: "amqp://${CLP_QUEUE_USER}:${CLP_QUEUE_PASS}@queue:5672"
      RESULT_BACKEND: >-
        redis://default:${CLP_REDIS_PASS}@redis:6379/${CLP_REDIS_COMPRESSION_BACKEND_DB:-1}
      CLP_LOGS_DIR: "/var/log"
      CLP_LOGGING_LEVEL: "${CLP_COMPRESSION_SCHEDULER_LOGGING_LEVEL:-INFO}"
      CLP_DB_USER: "${CLP_DB_USER}"
      CLP_DB_PASS: "${CLP_DB_PASS}"
    volumes:
      - "${CLP_HOST_LOGS_DIR:-./var/log}/.clp-config.yml:/etc/clp-config.yml:ro"
      - "${CLP_HOST_LOGS_DIR:-./var/log}:/var/log"
      # FIXME: why not call this /mnt/input?
      - "/:/mnt/logs:ro"
      - "${CLP_HOST_AWS_CONFIG_DIR:-~/.aws}:/.aws:ro"
    depends_on:
      db-table-creator:
        condition: "service_completed_successfully"
      queue:
        condition: "service_healthy"
      redis:
        condition: "service_healthy"
    command: [
      "python3",
      "-u",
      "-m", "job_orchestration.scheduler.compress.compression_scheduler",
      "--config", "/etc/clp-config.yml"
    ]

  query-scheduler:
    <<: *service_defaults
    image: "${CLP_PACKAGE_CONTAINER}"
    container_name: "query_scheduler"
    environment:
      PYTHONPATH: "/opt/clp/lib/python3/site-packages"
      BROKER_URL: "amqp://${CLP_QUEUE_USER}:${CLP_QUEUE_PASS}@queue:5672"
      RESULT_BACKEND: >-
        redis://default:${CLP_REDIS_PASS}@redis:6379/${CLP_REDIS_QUERY_BACKEND_DB:-0}
      CLP_LOGS_DIR: "/var/log"
      CLP_LOGGING_LEVEL: "${CLP_QUERY_SCHEDULER_LOGGING_LEVEL:-INFO}"
      CLP_DB_USER: "${CLP_DB_USER}"
      CLP_DB_PASS: "${CLP_DB_PASS}"
    volumes:
      - "${CLP_HOST_LOGS_DIR:-./var/log}/.clp-config.yml:/etc/clp-config.yml:ro"
      - "${CLP_HOST_LOGS_DIR:-./var/log}:/var/log"
    depends_on:
      db-table-creator:
        condition: "service_completed_successfully"
      queue:
        condition: "service_healthy"
      redis:
        condition: "service_healthy"
    command: [
      "python3",
      "-u",
      "-m", "job_orchestration.scheduler.query.query_scheduler",
      "--config", "/etc/clp-config.yml"
    ]
    healthcheck:
      <<: *healthcheck_defaults
      # FIXME: need to suppressing warnings in the schduler for reading 0 out of 8 expected bytes
      test: [
        "CMD",
        "bash",
        "-c",
        "< /dev/tcp/query_scheduler/7000"
      ]

  compression-worker:
    <<: *service_defaults
    image: "${CLP_PACKAGE_CONTAINER}"
    container_name: "compression_worker"
    environment:
      PYTHONPATH: "/opt/clp/lib/python3/site-packages"
      BROKER_URL: "amqp://${CLP_QUEUE_USER}:${CLP_QUEUE_PASS}@queue:5672"
      RESULT_BACKEND: >-
        redis://default:${CLP_REDIS_PASS}@redis:6379/${CLP_REDIS_COMPRESSION_BACKEND_DB:-1}
      CLP_HOME: "/opt/clp"
      CLP_LOGS_DIR: "/var/log/compression_worker"
      CLP_LOGGING_LEVEL: "${CLP_COMPRESSION_WORKER_LOGGING_LEVEL:-INFO}"
      CLP_WORKER_LOG_PATH: "/var/log/compression_worker/worker.log"
      CLP_CONFIG_PATH: "/etc/clp-config.yml"
    volumes:
      - "${CLP_HOST_LOGS_DIR:-./var/log}/.clp-config.yml:/etc/clp-config.yml:ro"
      - "${CLP_HOST_LOGS_DIR:-./var/log}/compression_worker:/var/log/compression_worker"
      # FIXME: why dump "var/data/compression-job-4-task-4-db-config.yml"?
      - "${CLP_HOST_DATA_DIR:-./var/data}:/var/data"
      - "${CLP_HOST_DATA_DIR:-./var/data}/archives:/var/data/archives"
      # FIXME: why not call this /mnt/input?
      - "/:/mnt/logs:ro"
      - "${CLP_HOST_AWS_CONFIG_DIR:-~/.aws}:/.aws:ro"
      - "${CLP_HOST_ARCHIVE_STAGING_DIR:-./var/data/staged-archives}:/var/data/staged-archives"
    command: [
      "python3",
      "-u",
      "/opt/clp/lib/python3/site-packages/bin/celery",
      "-A", "job_orchestration.executor.compress",
      "worker",
      "--concurrency", "${CLP_COMPRESSION_WORKER_CONCURRENCY:-1}",
      "--loglevel", "${CLP_COMPRESSION_WORKER_LOGGING_LEVEL:-INFO}",
      "-f", "/var/log/compression_worker/worker.log",
      "-Q", "compression",
      "-n", "compression-worker"
    ]

  query-worker:
    <<: *service_defaults
    image: "${CLP_PACKAGE_CONTAINER}"
    container_name: "query_worker"
    environment:
      PYTHONPATH: "/opt/clp/lib/python3/site-packages"
      BROKER_URL: "amqp://${CLP_QUEUE_USER}:${CLP_QUEUE_PASS}@queue:5672"
      RESULT_BACKEND: >-
        redis://default:${CLP_REDIS_PASS}@redis:6379/${CLP_REDIS_QUERY_BACKEND_DB:-0}
      CLP_HOME: "/opt/clp"
      CLP_LOGS_DIR: "/var/log/query_worker"
      CLP_LOGGING_LEVEL: "${CLP_QUERY_WORKER_LOGGING_LEVEL:-INFO}"
      CLP_WORKER_LOG_PATH: "/var/log/query_worker/worker.log"
      CLP_CONFIG_PATH: "/etc/clp-config.yml"
    volumes:
      - "${CLP_HOST_LOGS_DIR:-./var/log}/.clp-config.yml:/etc/clp-config.yml:ro"
      - "${CLP_HOST_LOGS_DIR:-./var/log}/query_worker:/var/log/query_worker"
      - "${CLP_HOST_DATA_DIR:-./var/data}/archives:/var/data/archives"
      - "${CLP_HOST_DATA_DIR:-./var/data}/streams:/var/data/streams"
      - "${CLP_HOST_AWS_CONFIG_DIR:-~/.aws}:/.aws:ro"
      - "${CLP_HOST_STREAM_STAGING_DIR:-./var/data/staged-streams}:/var/data/staged-streams"
    command: [
      "python3",
      "-u",
      "/opt/clp/lib/python3/site-packages/bin/celery",
      "-A", "job_orchestration.executor.query",
      "worker",
      "--concurrency", "${CLP_QUERY_WORKER_CONCURRENCY:-1}",
      "--loglevel", "${CLP_QUERY_WORKER_LOGGING_LEVEL:-INFO}",
      "-f", "/var/log/query_worker/worker.log",
      "-Q", "query",
      "-n", "query-worker"
    ]

  reducer:
    <<: *service_defaults
    image: "${CLP_PACKAGE_CONTAINER}"
    container_name: "reducer"
    environment:
      PYTHONPATH: "/opt/clp/lib/python3/site-packages"
      CLP_HOME: "/opt/clp"
      CLP_LOGS_DIR: "/var/log/reducer"
      CLP_LOGGING_LEVEL: "${CLP_REDUCER_LOGGING_LEVEL:-INFO}"
    volumes:
      - "${CLP_HOST_LOGS_DIR:-./var/log}/.clp-config.yml:/etc/clp-config.yml:ro"
      - "${CLP_HOST_LOGS_DIR:-./var/log}/reducer:/var/log/reducer"
    depends_on:
      query-scheduler:
        condition: "service_healthy"
      results-cache-indices-creator:
        condition: "service_completed_successfully"
    command: [
      "python3", "-u",
      "-m", "job_orchestration.reducer.reducer",
      "--config", "/etc/clp-config.yml",
      "--concurrency", "${CLP_REDUCER_CONCURRENCY:-1}",
      "--upsert-interval", "${CLP_REDUCER_UPSERT_INTERVAL:-100}"
    ]

  webui:
    <<: *service_defaults
    image: "${CLP_PACKAGE_CONTAINER}"
    container_name: "webui"
    environment:
      NODE_PATH: "/opt/clp/var/www/webui/server/node_modules"
      HOST: "0.0.0.0"
      PORT: "4000"
      CLP_DB_USER: "${CLP_DB_USER}"
      CLP_DB_PASS: "${CLP_DB_PASS}"
      NODE_ENV: "production"
    volumes:
      - "${CLP_HOST_DATA_DIR:-./var/data}/streams:/var/data/streams"
      - "./var/www/webui/client/settings.json:/opt/clp/var/www/webui/client/settings.json:ro"
      - "./var/www/webui/server/dist/server/settings.json\
:/opt/clp/var/www/webui/server/dist/server/settings.json:ro"
      - "${CLP_HOST_AWS_CONFIG_DIR:-~/.aws}:/.aws:ro"
    ports:
      - "${CLP_WEBUI_HOST:-127.0.0.1}:${CLP_WEBUI_PORT:-4000}:4000"
    command: [
      "/opt/clp/bin/node-22",
      "/opt/clp/var/www/webui/server/dist/server/src/main.js"
    ]
    depends_on:
      db-table-creator:
        condition: "service_completed_successfully"
      results-cache-indices-creator:
        condition: "service_completed_successfully"
    healthcheck:
      <<: *healthcheck_defaults
      test: [
        "CMD",
        "bash",
        "-c",
        "< /dev/tcp/webui/4000"
      ]

  garbage-collector:
    <<: *service_defaults
    image: "${CLP_PACKAGE_CONTAINER}"
    container_name: "garbage_collector"
    environment:
      PYTHONPATH: "/opt/clp/lib/python3/site-packages"
      CLP_HOME: "/opt/clp"
      CLP_LOGS_DIR: "/var/log/garbage_collector"
      CLP_LOGGING_LEVEL: "${CLP_GC_LOGGING_LEVEL:-INFO}"
      CLP_DB_USER: "${CLP_DB_USER}"
      CLP_DB_PASS: "${CLP_DB_PASS}"
    volumes:
      - "${CLP_HOST_LOGS_DIR:-./var/log}/.clp-config.yml:/etc/clp-config.yml:ro"
      - "${CLP_GC_LOGS_DIR}:/var/log/garbage_collector"
    depends_on:
      query-scheduler:
        condition: "service_healthy"
      db-table-creator:
        condition: "service_completed_successfully"
      results-cache-indices-creator:
        condition: "service_completed_successfully"
    command: [
      "python3", "-u",
      "-m", "job_orchestration.garbage_collector.garbage_collector",
      "--config", "/etc/clp-config.yml",
    ]
